---
# Deploy mongo nodes if they are absent
- hosts: rocketchat-mongodb
  become: true
  become_method: sudo
  
  tasks:
    - name: Check that mongos exist
      docker_container_info: 
        name: "mongodb"
      register: mongo
      run_once: true
       
    - name: Looking at gathered info...
      debug:
        msg: "Looks like MongoDB setup exists, will skip installation"
      when: mongo.exists
      
    - name: Setup mongodb if absent
      include_role:
        name: docker_mongo
      when: not mongo.exists

- hosts: rocketchat-app
  become: true
  vars_files:
    - vars/chat_installation_consts.yaml
  
  tasks:
    - name: Pull rocket.chat, NGINX, nginx-proxy-companion from dockerhub
      docker_image: 
        name: "{{ item }}"
        source: pull
      loop: 
        - "rocketchat/rocket.chat:{{ rocketchat_tag }}"
        - "jwilder/nginx-proxy:{{ jwilder_nginx_tag }}"
        - "jrcs/letsencrypt-nginx-proxy-companion:{{ le_companion_tag }}"
    
#    - name: Create directory for NGINX configs
#      file:
#        path: ~/nginx-config
#        state: directory
#        mode: '0775'
#        owner: "{{ ansible_user }}"
#        group: "{{ ansible_user }}"
    
    # Use variable for domain name and template for config. IP can be retrieved via ansible variable
#    - name: Create config for NGINX
#      template:
#        src: config-templates/rocketchat-nginx.conf.j2
#        dest: ~/nginx-config/nginx.conf
#        owner: root
#        group: root
#        mode: '0644'
    
#    - name: Create config for letsencrypt-companion
    
#    - name: Create network for Auto-NGINX container
#      docker_network:
#        name: proxy-net
#        attachable: yes
    
    # --mount/-v --network
    - name: Run NGINX with all of the needed stuff
      docker_container:
        state: started
        name: "proxy"
        # env: 
        image: "jwilder/nginx-proxy:{{ jwilder_nginx_tag }}"
        detach: yes
        volumes: 
          - /var/run/docker.sock:/tmp/docker.sock:ro
          - certs:/etc/nginx/certs
          - vhost:/etc/nginx/vhost.d
          - webroot:/usr/share/nginx/html
        #networks:
        #  - name: proxy-net
        published_ports:
          - "80:80"
          - "443:443"
        
    
    # Can't write to /certs
    - name: Run nginx-proxy-companion with all of the needed stuff
      docker_container:
        state: started
        name: "proxy_companion"
        image: "jrcs/letsencrypt-nginx-proxy-companion:{{ le_companion_tag }}"
        env: 
          DEFAULT_EMAIL: "{{ le_email | default(omit) }}"
        detach: yes
        volumes_from: [ "proxy" ]
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - acme:/etc/acme.sh
    
    # TODO how to connect to remote MongoDB servers?
    - name: Run (x) Rocket.Chats with all of the needed stuff
      docker_container:
        state: started
        name: "rocketchat_{{ item|int }}"
        image: "rocketchat/rocket.chat:{{ rocketchat_tag }}"
        env:
          PORT: "{{ 2999 + item|int }}"
          ROOT_URL: "chat.{{ domain|str }}"
          VIRTUAL_HOST: "chat.{{ domain|str}}"
          VIRTUAL_PORT: "{{ 2999 + item|int }}"
          LETSENCRYPT_HOST: "chat.{{ domain|str }}"
          MONGO_URL: "mongodb://{{ hostvars[groups['rocketchat-mongodb'][0]].ansible_host }}:27017/rocketchat"
          MONGO_OPLOG_URL: "mongodb://{{ hostvars[groups['rocketchat-mongodb'][0]].ansible_host }}:27017/local?replSet=rs0"
        detach: yes
      with_sequence: start=1 end="{{ rc_quantity|int }}"
    
