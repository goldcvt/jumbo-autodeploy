---
- hosts: test-servers
  become: true
  vars_files:
    - ../vars/mongo-primary-startup.yaml

  tasks:
    - name: Pull MongoDB
      docker_image:
        name: "mongo:4.0"
        source: pull
    
    - name: Create directory for keyfile
      file:
        state: directory
        path: /home/coro/mongo-files/data
        # owner # = chown
        # mode # = chmod, starting with leading zero
    
    - name: Create mongo startup file from a template
      template:
        src: ../config-templates/mongo-startup.sh.j2
        dest: /home/coro/mongo-startup.sh
        owner: "{{ ansible_user }}"
        mode: 0744
      
    - name: Create keyfile
      shell: openssl rand -base64 741 > /home/coro/mongodb-keyfile
      
    - name: Chmod the keyfile
      shell: chmod 600 /home/coro/mongodb-keyfile
      
    - name: Change owner to Mongo-container user
      shell: chown 999 /home/coro/mongodb-keyfile
    
    - name: Create network
      docker_network:
        name: db-net
        attachable: yes
      
    - name: Init MongoDB master
      docker_container:
        state: started
        name: "MongoDB-master"
        image: "mongo:4.0"
        hostname: "mongo1.mongo-cluster"
        env:
          MONGO_INITDB_ROOT_USERNAME: "{{ MONGO_INITDB_ROOT_USERNAME }}"
          MONGO_INITDB_ROOT_PASSWORD: "{{ MONGO_INITDB_ROOT_PASSWORD }}"
          MONGO_INITDB_DATABASE: "{{ MONGO_INITDB_DATABASE }}"
        volumes:
          - /home/coro/mongo-files/data:/data/db
          - /home/coro:/opt/keyfile
          - /home/coro/mongo-startup.sh:/docker-entrypoint-initdb.d/init-mongo.sh
        exposed_ports:
          - "27017:27017"
        detach: yes
        command: --smallfiles --oplogSize 128 --keyFile /opt/keyfile/mongodb-keyfile --replSet "rs0" # --auth
        networks:
          - name: db-net
        purge_networks: yes

    - name: Add Mongo container to inventory
      add_host:
        name: "MongoDB-master"
        ansible_connection: docker
      changed_when: false
      
    - name: Create admin user
      community.mongodb.mongodb_user:
        database: admin
        name: siteUserAdmin
        password: password #"{{ admin-password | mandatory }}"
        roles: userAdminAnyDatabase
        state: present
        login_user: root
        login_password: p4ssw0rd
      delegate_to: "MongoDB-master"
